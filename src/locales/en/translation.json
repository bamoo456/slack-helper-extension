{
  "title": "📝 Slack Helper",
  "description": "Use the '📝 Summarize this thread' button in Slack threads to automatically extract messages and generate summaries in Gemini.",
  "tabs": {
    "prompt": "📝 AI Prompt",
    "scroll": "⚙️ Scroll Settings",
    "sync": "🔄 Model Sync",
    "llm": "🤖 LLM API Settings"
  },
  "prompt": {
    "title": "📝 Custom AI Prompt",
    "hint": "※ Add <code>{MESSAGES}</code> to your AI prompt, and the system will automatically replace it with the Slack message content to be summarized.",
    "currentPrompt": "📋 Current Saved Prompt:",
    "loading": "Loading...",
    "wordCount": "Word count:",
    "status": "Status:",
    "notSet": "Not set",
    "set": "Set",
    "editLabel": "Edit AI Prompt:",
    "placeholder": "Enter your custom AI prompt, or leave blank to use default settings...",
    "save": "💾 Save Settings",
    "reset": "🔄 Reset to Default",
    "saved": "Prompt saved",
    "saveFailed": "Save failed",
    "resetSuccess": "Reset to default",
    "resetFailed": "Reset failed",
    "defaultSystemPrompt": "Please help me summarize the following Slack thread content (provide in Markdown format):\n\n**Note: The following content uses Markdown format, including clickable links and user mentions**\n\n{MESSAGES}\n\nPlease provide:\n1. **Main discussion topics**\n  - If there are different topics, please list them separately and indicate related messages.\n2. **Key decisions or conclusions**\n  - If there are different decisions, please list them separately and indicate related messages.\n3. **Items requiring follow-up actions**\n  - If there are different items requiring follow-up actions, please list them separately and indicate responsible persons.\n4. **Other important matters**\n  - If there are other important matters, please list them separately and indicate related messages.\n\n*Please preserve Markdown format in your response, especially links and user mentions*",
    "loadError": "❌ Load failed",
    "defaultContentTruncated": "... (default content truncated)",
    "contentTruncated": "... (content truncated, see edit area for full content)",
    "wordCountDefault": "Word count: {{count}} (default)",
    "wordCountCustom": "Word count: {{count}}",
    "wordCountEditing": "Word count: {{count}} (editing)",
    "wordCountEditingZero": "Word count: 0 (editing)",
    "statusDefault": "Status: Default mode",
    "statusCustom": "Status: Custom mode",
    "saveCustomSuccess": "✅ Custom prompt saved",
    "clearCustomSuccess": "✅ Custom prompt cleared, will use default",
    "resetToDefaultSuccess": "🔄 Reset to default prompt"
  },
  "scroll": {
    "title": "⚙️ Thread Message Reading Settings",
    "hint": "Adjust these parameters to optimize message collection speed and accuracy. It's recommended to use default values first, then adjust if needed.",
    "basicSettings": "Basic Scroll Settings",
    "scrollDelay": "Standard Scroll Delay (ms)",
    "scrollDelayDesc": "Controls the wait time for standard scrolling",
    "scrollStep": "Standard Scroll Step (pixels)",
    "scrollStepDesc": "Distance for each standard scroll",
    "minScrollAmount": "Minimum Scroll Distance (pixels)",
    "minScrollAmountDesc": "Ensures minimum distance for each scroll",
    "advancedSettings": "Advanced Settings",
    "maxScrollAttempts": "Maximum Scroll Attempts",
    "maxScrollAttemptsDesc": "Safety mechanism to prevent infinite scrolling",
    "noMaxNewMessagesCount": "Stop Scroll Threshold",
    "noMaxNewMessagesCountDesc": "Stop scrolling after this many consecutive attempts with no new messages",
    "save": "💾 Save Settings",
    "reset": "🔄 Reset to Default",
    "saved": "Scroll settings saved",
    "saveFailed": "Save failed",
    "resetSuccess": "Reset to default",
    "resetFailed": "Reset failed",
    "confirmReset": "Are you sure you want to reset scroll settings to default values?"
  },
  "sync": {
    "title": "🔄 Gemini Model Sync",
    "hint": "Manually manage Gemini model synchronization. Use manual sync to get the latest available model list.",
    "syncStatus": "🔍 Sync Status",
    "checking": "Checking sync status...",
    "manualSync": "🔄 Manual Model Sync",
    "checkStatus": "🔍 Check Status",
    "availableModels": "📋 Available Models List",
    "loadingModels": "Loading model list...",
    "modelsCount": "Model count:",
    "modelsCountChecking": "Checking",
    "modelsCountLoading": "Loading",
    "modelsCountFailed": "Load failed",
    "lastUpdate": "Last update:",
    "lastUpdateChecking": "Checking",
    "lastUpdateLoading": "Loading",
    "lastUpdateFailed": "Load failed",
    "lastUpdateUnknown": "Unknown",
    "lastUpdateLessThanHour": "Less than 1 hour ago",
    "lastUpdateHours": "{{hours}} hours ago",
    "lastUpdateDays": "{{days}} days ago",
    "refreshModels": "📋 Reload Model List",
    "syncExplanation": "💡 Sync Explanation",
    "manualSyncMode": "Manual Sync Mode",
    "manualSyncModeDesc": "Extension won't auto-sync models, manual trigger required to get latest model list",
    "syncProcess": "Sync Process",
    "syncProcessDesc": "Sync will open new Gemini window to detect available models, then auto-close",
    "initiated": "Sync initiated",
    "failed": "Sync failed",
    "refreshing": "Refreshing model list",
    "refreshFailed": "Refresh failed",
    "synced": "Synced",
    "notSynced": "Not synced",
    "neverSynced": "Never synced",
    "noModels": "No available models",
    "statusUnknown": "Status unknown",
    "syncStatusUnknown": "Sync status unknown",
    "cannotConnectBackground": "Cannot connect to background script",
    "cannotLoadModels": "Cannot load model list",
    "invalidModelData": "Invalid model data format",
    "noAvailableModels": "No available models",
    "modelBadgeDefault": "Default",
    "modelBadgeSynced": "Synced",
    "modelsCountWithSynced": "{{total}} ({{synced}} synced)",
    "modelsCountDefaultOnly": "{{total}} (default model only)",
    "syncInProgress": "🔄 Syncing...",
    "manualSyncInProgress": "Manually syncing models...",
    "manualSyncStart": "🔄 Starting manual sync...",
    "manualSyncSuccess": "✅ Manual sync completed successfully",
    "manualSyncFailed": "❌ Manual sync failed",
    "manualSyncFailedWithError": "❌ Manual sync failed: {{error}}",
    "unknownError": "Unknown error",
    "syncSuccessful": "Sync completed successfully!",
    "syncCompletedMessage": "✅ Model sync successful! Updating local model list...",
    "totalTime": "Total time: {{time}} seconds",
    "closeButton": "❌ Close"
  },
  "llm": {
    "title": "🤖 LLM API Settings",
    "hint": "Configure LLM API providers to enable message enhancement features (rephrase, improve, fix grammar, etc.).",
    "apiProvider": "🔧 API Provider",
    "selectProvider": "Select LLM Provider",
    "selectProviderPlaceholder": "Please select a provider...",
    "openaiSettings": "OpenAI ",
    "openaiCompatibleSettings": "OpenAI Compatible Server",
    "selectProviderDesc": "Choose the LLM API provider you want to use",
    "openaiConfig": "🔑 OpenAI API Configuration",
    "openaiApiKey": "OpenAI API Key",
    "openaiApiKeyPlaceholder": "sk-...",
    "openaiApiKeyDesc": "Enter your OpenAI API Key (will be securely stored locally)",
    "openaiModel": "Model Selection (Optional)",
    "openaiModelDesc": "Select the OpenAI model to use",
    "openaiModelGpt35": "GPT-3.5 Turbo (Default)",
    "openaiModelGpt4": "GPT-4",
    "openaiModelGpt4Turbo": "GPT-4 Turbo",
    "compatibleConfig": "🔧 OpenAI Compatible API Configuration",
    "compatibleBaseUrl": "API Base URL",
    "compatibleBaseUrlPlaceholder": "https://your-api-server.com/v1",
    "compatibleBaseUrlDesc": "Enter your API server base URL",
    "compatibleModel": "Model Name",
    "compatibleModelPlaceholder": "gpt-3.5-turbo",
    "compatibleModelDesc": "Enter the model name to use",
    "compatibleHeaders": "Custom Headers (JSON format, optional)",
    "compatibleHeadersPlaceholder": "{\"Authorization\": \"Bearer your-token\", \"Custom-Header\": \"value\"}",
    "compatibleHeadersDesc": "Enter additional HTTP Headers (JSON format)",
    "compatibleParams": "Custom Request Parameters (JSON format, optional)",
    "compatibleParamsPlaceholder": "{\"temperature\": 0.7, \"max_tokens\": 500}",
    "compatibleParamsDesc": "Enter additional request parameters (JSON format)",

    "userModelsTitle": "📋 Supported Models Management",
    "userModelsHint": "Manage your list of supported models. These models will be available for selection in message enhancement features.",
    "addModelPlaceholder": "Enter model name (e.g., gpt-4, claude-3-sonnet)",
    "addModelBtn": "➕ Add Model",
    "addModelDesc": "Enter the model name to support, supports OpenAI and other compatible API models",
    "currentModelsTitle": "📝 Currently Supported Models:",
    "modelsPlaceholder": "Loading...",
    "noModelsAdded": "No models added yet",
    "modelsCountLabel": "Model count:",
    "defaultModelLabel": "Default model:",
    "notSet": "Not set",
    "defaultModelSelectLabel": "Default Model",
    "defaultModelSelectPlaceholder": "Select default model...",
    "defaultModelSelectDesc": "Select the default model for message enhancement features",
    "setDefaultBtn": "Set as Default",
    "removeBtn": "Remove",
    "defaultBadge": "Default",
    "addedOn": "Added on",
    "modelNameRequired": "Please enter model name",
    "modelAlreadyExists": "Model already exists",
    "addModelFailed": "Failed to add model",
    "modelAdded": "Model added",
    "setDefaultFailed": "Failed to set default model",
    "defaultModelSet": "Set as default model",
    "confirmRemoveModel": "Are you sure you want to remove this model?",
    "removeModelFailed": "Failed to remove model",
    "modelRemoved": "Model removed",
    "modelCount": "Model Count",
    "defaultModel": "Default Model",
    "notSet": "Not Set",
    "setGlobalDefaultFailed": "Failed to set global default model",
    "globalDefaultSet": "Global default model set",
    "globalDefaultCleared": "Global default model cleared",

    "save": "💾 Save Settings",
    "reset": "🔄 Reset Settings",
    "saved": "✅ LLM settings saved",
    "saveFailed": "Failed to save settings",
    "resetSuccess": "🔄 LLM settings reset",
    "resetFailed": "Failed to reset settings",
    "selectProviderFirst": "Please select an LLM provider first",
    "fillRequiredFields": "Please fill in all required fields",
    "invalidHeadersFormat": "Invalid custom headers format, please use valid JSON",
    "invalidParamsFormat": "Invalid custom parameters format, please use valid JSON",
    "apiKeyRequired": "Please enter OpenAI API Key",
    "baseUrlRequired": "Please enter API Base URL",
    "modelRequired": "Please enter model name"
  },
  "messageHelper": {
    "refineMessage": "Refine Message",
    "customPromptPlaceholder": "Modify with a prompt... (Ctrl+Enter to apply)",
    "rephrase": "Rephrase",
    "refine": "Refine",
    "fixGrammar": "Fix grammar",
    "pleaseTypeMessage": "Please type a message first before applying custom prompt.",
    "pleaseTypeMessageBeforeRefining": "Please type a message first before refining it.",
    "errorProcessingRequest": "Error processing your request",
    "rephrasing": "Rephrasing your message...",
    "refining": "Refining your message for better quality and clarity...",
    "fixingGrammar": "Fixing grammar and spelling...",
    "processingCustomPrompt": "Processing with custom prompt...",
    "processing": "Processing...",
    "customPrompt": "Custom Prompt",
    "original": "Original:",
    "result": "Result:",
    "copy": "📋 Copy",
    "replace": "✅ Replace",
    "copiedToClipboard": "Copied to clipboard!",
    "failedToCopy": "Failed to copy",
    "textReplaced": "Text replaced!",
    "unknownAction": "Unknown action selected.",
    "noModelSelected": "No model selected"
  },
  "usage": {
    "title": "Usage Instructions:",
    "step1": "Open any thread in Slack web version",
    "step2": "Click the '📝 Summarize this thread' button that appears",
    "step3": "Select appropriate Gemini model in preview page",
    "step4": "Confirm summary, wait for Gemini to auto-open and paste message",
    "step5": "View the summary results generated by Gemini",
    "step6": "💡 Manage Gemini model sync in '🔄 Model Sync' tab"
  },
  "status": {
    "checking": "Checking Slack page...",
    "onSlack": "On Slack page",
    "notOnSlack": "Not on Slack page",
    "tip": "💡 Tip: Make sure you're logged into both Slack and Gemini",
    "cannotDetectPage": "Cannot detect current page",
    "onSlackCheckingThread": "On Slack page - checking thread...",
    "pleaseOpenSlack": "Please open Slack web version",
    "loadingBackupScript": "Loading backup detection script...",
    "pleaseRefreshSlack": "Please refresh Slack page to load full functionality",
    "backupScriptLoaded": "⚡ Backup script loaded, checking...",
    "threadFound": "Thread found - click summary button to start",
    "inSlackOpenThread": "In Slack - please open a thread",
    "cannotDetectThread": "Cannot detect thread status"
  },
  "modal": {
    "syncingTitle": "Syncing Gemini Models",
    "step1": "Opening Gemini page...",
    "step2": "Waiting for page to load...",
    "step3": "Detecting available models...",
    "step4": "Saving model list...",
    "syncMessage": "Opening Gemini page for model sync, please wait...",
    "syncTimer": "Elapsed time: {{time}} seconds",
    "warning1": "⚠️ Do not close this window during sync",
    "warning2": "🔄 Gemini page will auto-close after sync completion",
    "cancelSync": "❌ Cancel Sync"
  },
  "ui": {
    "summaryButton": "📝 AI Summary",
    "loading": "⏳ Analyzing thread...",
    "opening": "🚀 Opening Gemini...",
    "success": "✅ Gemini opened",
    "error": "❌ Error",
    "previewTitle": "📝 Thread Summary Preview",
    "participants": "👥 Participants:",
    "participantsCount": "{{count}} people",
    "messageCount": "💬 Message count:",
    "messagesCount": "{{count}} messages",
    "estimatedLength": "Estimated length: {{length}}",
    "timeRange": "⏰ Time range:",
    "selectModel": "🤖 Select Gemini Model:",
    "syncTip": "💡 More sync options in extension settings",
    "participantsList": "👥 Participants List:",
    "threadPreview": "📄 Thread Preview:",
    "copyToClipboard": "📋 Copy to Clipboard",
    "copied": "✅ Copied",
    "cancel": "❌ Cancel",
    "confirm": "✅ Confirm",
    "autoModel": "🔄 Auto (Use Gemini page default model)",
    "autoModelDesc": "🔄 Don't switch model, use current default model on Gemini page",
    "lengthShort": "Short discussion",
    "lengthMedium": "Medium length",
    "lengthLong": "Long discussion",
    "unknownTime": "Unknown time",
    "checkingThread": "🔍 Checking thread...",
    "collectingMessages": "📜 Collecting all messages...",
    "messagesCollected": "✅ Message collection completed",
    "showingPreview": "📋 Showing preview...",
    "openingGemini": "🚀 Opening Gemini..."
  },
  "errors": {
    "noThreadMessages": "No thread messages found"
  },
  "debug": {
    "buttonExistsInContainer": "Summary button already exists in {{location}}",
    "buttonNotFoundInContainer": "Summary button not found in {{location}}",
    "removingExistingButton": "Removing existing summary button",
    "containerLocation": "specified container",
    "pageLocation": "page",
    "gotModelsFromBackground": "models",
    "savedModelNotInList": "Saved model not in available list",
    "loadPromptError": "Error loading prompt",
    "startAutoScroll": "Starting auto-scroll to collect complete thread messages...",
    "collectedMessages": "Successfully collected {{count}} complete messages"
  },
  "background": {
    "syncManagerCreated": "Created background sync manager instance",
    "syncRequestReceived": "Received manual sync request",
    "syncCompleted": "Manual sync completed successfully",
    "syncCompletedMessage": "Manual sync completed successfully",
    "syncFailed": "Manual sync failed",
    "syncInProgress": "Background sync in progress...",
    "syncJustCompleted": "Just completed sync",
    "syncMinutesAgo": "Sync completed {{minutes}} minutes ago",
    "syncHoursAgo": "Sync completed {{hours}} hours ago",
    "syncNeedsUpdate": "Needs re-sync",
    "syncedRecently": "Models synced (< 1 hour ago)",
    "syncedHoursAgo": "Models synced ({{hours}} hours ago)",
    "syncNeedsRefresh": "Models need update",
    "neverSynced": "Never synced",
    "extractSlackError": "Unable to extract Slack messages",
    "firstInstall": "First installation completed",
    "extensionUpdate": "Extension update completed",
    "chromeStartup": "Chrome startup, initializing background model sync"
  },
  "modelSync": {
    "syncManager": "Model sync manager",
    "syncInterval": "Sync every 30 minutes",
    "startMonitoring": "Start monitoring Gemini page and periodic model sync",
    "pageChangeListener": "Listen for page changes",
    "periodicCheck": "Set up periodic check",
    "checkInterval": "Check current page every 5 seconds",
    "checkCurrentPage": "Check if current page is Gemini",
    "enteredGemini": "Just entered Gemini page",
    "detectedGemini": "Detected Gemini page, starting model sync",
    "leftGemini": "Left Gemini page",
    "leftGeminiStop": "Left Gemini page, stopping model sync",
    "isGeminiPage": "Check if current page is Gemini",
    "startPeriodicSync": "Start periodic sync",
    "immediateSync": "Execute sync immediately",
    "setPeriodicSync": "Set up periodic sync",
    "stopPeriodicSync": "Stop periodic sync",
    "executeSync": "Execute model sync",
    "startSyncGemini": "Starting Gemini model sync...",
    "sendSyncRequest": "Send sync request to background script",
    "letBackgroundHandle": "Let background script handle tab ID",
    "syncRequestFailed": "Model sync request failed:",
    "syncSuccessful": "Model sync successful",
    "syncFailed": "Model sync failed:",
    "syncError": "Error during model sync:",
    "manualTrigger": "Manual trigger model sync",
    "manualTriggerLog": "Manual trigger model sync",
    "globalInstance": "Global model sync manager instance",
    "initializeSync": "Initialize model sync",
    "syncManagerInitialized": "Model sync manager initialized",
    "getInstance": "Get model sync manager instance",
    "checkIsGemini": "Check if is Gemini page"
  },
  "geminiUtils": {
    "centralConfig": "Central model configuration - all model-related configs defined here",
    "baseModels": "Base models (always available)",
    "modelDisplayMapping": "Model display name mapping (for identification in Gemini UI)",
    "defaultModel": "Default selected model",
    "backgroundSyncManager": "Background model sync manager",
    "minSyncInterval": "Minimum sync interval 10 minutes",
    "initBackgroundSync": "Initialize background sync",
    "initBackgroundSyncLog": "Initialize background model sync manager",
    "checkAndSync": "Check and execute sync",
    "syncInProgress": "Sync in progress, skipping this sync",
    "syncTooRecent": "Too soon since last sync, skipping this sync",
    "modelsStillValid": "Model list still valid, skipping sync",
    "startBackgroundSync": "Starting background model sync...",
    "shouldSync": "Check if should execute sync",
    "maxAge": "24 hours",
    "needsSyncAfter24h": "If no update for over 24 hours, sync needed",
    "executeBackgroundSync": "Execute background sync",
    "startBackgroundSyncFlow": "🔄 Starting background model sync flow...",
    "createHiddenGemini": "Create hidden Gemini page for sync",
    "backgroundTab": "Open in background, don't switch to this tab",
    "backgroundGeminiOpened": "Background opened Gemini page for sync, Tab ID: {{tabId}}",
    "syncTimeout": "Sync operation timeout",
    "backgroundSyncSuccess": "✅ Background sync flow completed successfully",
    "backgroundSyncFailed": "❌ Background sync failed:",
    "ensurePageClosed": "Ensure page is closed",
    "backgroundPageClosed": "Closed background Gemini page",
    "closePageError": "Error closing page:",
    "performSyncOperation": "Perform sync operation (separated for better error handling)",
    "waitPageLoad": "📄 Waiting for page load completion...",
    "useWaitForReady": "Use waitForGeminiPageReady to ensure page fully ready",
    "checkPageReady": "🔍 Checking page ready status...",
    "backgroundPageReady": "✅ Background Gemini page ready",
    "executeModelSync": "🔄 Starting model sync execution...",
    "backgroundSyncComplete": "✅ Background model sync operation complete",
    "waitForPageLoad": "Wait for page load completion",
    "tabLoadComplete": "📄 Tab {{tabId}} load complete, waiting 3 seconds for stability...",
    "extraWait": "Extra wait 3 seconds to ensure page fully loaded",
    "checkPageLoaded": "Check if page already loaded",
    "cannotGetTabInfo": "Cannot get tab info:",
    "tabAlreadyLoaded": "📄 Tab {{tabId}} already loaded",
    "pageLoadTimeout": "Page load timeout ({{seconds}} seconds)",
    "syncModelsInTab": "Sync models in specified tab",
    "startSyncInTab": "🔄 Starting sync in Tab {{tabId}}...",
    "checkStorageRecent": "Check storage for recent model data",
    "isRecent": "If updated within 5 seconds, skip duplicate sync",
    "skipDuplicateSync": "✅ Models recently synced, skipping duplicate sync",
    "useExistingModels": "📋 Using existing {{count}} models",
    "addTimeoutControl": "Use Promise.race to add timeout control",
    "modelSyncTimeout": "Model sync operation timeout",
    "backgroundModelSyncSuccess": "✅ Background model sync successful",
    "backgroundModelSyncFailed": "❌ Background model sync failed:",
    "manualTriggerSync": "Manual trigger sync",
    "manualBackgroundSyncStart": "🔄 Manual background sync start",
    "resetTimeLimit": "Reset time limit",
    "manualBackgroundSyncSuccess": "✅ Manual background sync completed successfully",
    "manualBackgroundSyncFailed": "❌ Manual background sync failed:",
    "stopBackgroundSync": "Stop background sync",
    "backgroundSyncStopped": "Background model sync stopped",
    "modelNameMapping": "Model name mapping - map internal model names to Gemini UI display text",
    "generateBasicUrl": "Generate basic Gemini URL (no longer relies on URL parameters)"
  },
  "scrollCollector": {
    "defaultValues": "Default values (if no config manager)",
    "maxScrollAttempts": "Increase max scroll attempts to support long threads",
    "noMaxNewMessagesCount": "Increase tolerance",
    "initScrollParams": "Initialize scroll parameters",
    "loadConfig": "Load configuration",
    "loadScrollSettings": "Load scroll settings",
    "loadedScrollSettings": "Loaded scroll settings:",
    "loadScrollSettingsFailed": "Failed to load scroll settings, using defaults:",
    "updateScrollSettings": "Update scroll settings",
    "newSettings": "New scroll settings",
    "successUpdate": "Whether successfully updated",
    "resetScrollSettings": "Reset scroll settings to defaults",
    "successReset": "Whether successfully reset",
    "getCurrentScrollSettings": "Get current scroll settings",
    "currentScrollSettings": "Current scroll settings",
    "autoScrollCollect": "Auto-scroll and collect complete thread messages",
    "completeMessageList": "Complete message list",
    "startCollectingThread": "Starting to collect complete thread messages...",
    "threadContainerNotFound": "Thread container not found",
    "findScrollContainer": "Find scroll container",
    "scrollContainerNotFound": "Scroll container not found, using current visible messages",
    "useVisibleMessages": "Scroll container not found, using current visible messages",
    "foundScrollContainer": "Found scroll container, starting auto-scroll message collection",
    "scrollToTop": "First scroll to top",
    "setTimeout": "Set timeout mechanism (max 5 minutes)",
    "scrollCollectTimeout": "Scroll collection timeout",
    "stepByStepScroll": "Step-by-step scroll and collect messages",
    "autoScrollTooFew": "If auto-scroll collected too few messages, fallback to original method",
    "autoScrollNoMessages": "Auto-scroll collected no messages, fallback to original method",
    "completeMessageCollection": "Completed message collection, collected {{count}} messages total",
    "autoScrollError": "Error during auto-scroll message collection:",
    "fallbackToOriginal": "Fallback to original method to collect current visible messages",
    "findThreadScrollContainer": "Find thread scroll container",
    "commonSlackSelectors": "Common Slack scroll container selectors, ordered by priority",
    "virtualScrollList": "Virtual scroll list",
    "virtualScrollContainer": "Virtual scroll container",
    "foundScrollContainerSelector": "Found scroll container: {{selector}}",
    "checkVirtualScroll": "Special check for virtual scroll container",
    "foundVirtualContainer": "Found virtual scroll container, checking scroll capability",
    "virtualContainerScrollable": "Virtual scroll container is scrollable",
    "checkVirtualParent": "Check virtual scroll container parent element",
    "useVirtualParent": "Use virtual scroll container parent as scroll container",
    "checkThreadContainerScrollable": "If no specific container found, check if threadContainer itself is scrollable",
    "useThreadContainer": "Use thread container itself as scroll container",
    "noSuitableContainer": "No suitable scroll container found",
    "checkElementScrollable": "Check if element is scrollable",
    "scrollToTopMethod": "Scroll to top",
    "scrollingToTop": "Scrolling to top...",
    "scrollToTopAction": "Scroll to top",
    "waitScrollComplete": "Wait for scroll completion",
    "waitVirtualListUpdate": "Wait for virtual list update",
    "scrolledToTop": "Scrolled to top",
    "scrollAndCollect": "Scroll and collect messages",
    "standardScrollMethod": "Standard scroll collection method",
    "startStandardScroll": "Starting standard scroll collection, initial scroll height: {{height}}px",
    "extractVisibleMessages": "Extract currently visible messages",
    "addNewMessages": "Add new messages to collection",
    "scrollProgress": "Scroll attempt {{attempt}}: added {{newMessages}}, total {{total}}, progress {{progress}}%, current height: {{height}}px",
    "checkScrollStuck": "Check if scroll is stuck",
    "scrollStuckCount": "Scroll position changed very little, stuck count: {{count}}",
    "checkStopScrolling": "Check if should stop scrolling",
    "noNewMessagesCount": "No new messages found, count: {{current}}/{{max}}",
    "longThreadTolerance": "For long threads, increase tolerance",
    "stopScrollingNoNew": "Multiple consecutive attempts with no new messages, stopping scroll",
    "scrollStuckTooLong": "If scroll stuck too long, try larger scroll step",
    "tryLargerStep": "Detected scroll stuck, trying larger step",
    "calculateNextScroll": "Calculate next scroll distance"
  },
  "language": {
    "switch": "🌐 Switch Language",
    "current": "English",
    "traditionalChinese": "Traditional Chinese"
  }
}