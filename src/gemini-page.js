/**
 * Gemini Page Functions - Âú® Gemini È†ÅÈù¢‰∏≠Âü∑Ë°åÁöÑÂáΩÊï∏
 * ÈÄô‰∫õÂáΩÊï∏ÊúÉË¢´Ê≥®ÂÖ•Âà∞ Gemini È†ÅÈù¢‰∏≠Âü∑Ë°å
 */

/**
 * Âú® Gemini È†ÅÈù¢‰∏≠Ë≤º‰∏äË®äÊÅØ
 * @param {string} messages - Ë¶ÅË≤º‰∏äÁöÑË®äÊÅØ
 */
export function pasteMessagesIntoGemini(messages) {
  function findTextArea() {
    // ÂòóË©¶Â§öÁ®ÆÂèØËÉΩÁöÑÊñáÂ≠óËº∏ÂÖ•ÂçÄÂüüÈÅ∏ÊìáÂô®
    const selectors = [
      'div[contenteditable="true"]',
      'textarea',
      '[data-testid="chat-input"]',
      '.ql-editor',
      '[role="textbox"]',
      '.chat-input',
      'input[type="text"]'
    ];

    for (const selector of selectors) {
      const element = document.querySelector(selector);
      if (element && element.offsetParent !== null) { // Á¢∫‰øùÂÖÉÁ¥†ÂèØË¶ã
        return element;
      }
    }
    return null;
  }

  function waitForTextArea(maxAttempts = 10, attempt = 0) {
    const textArea = findTextArea();
    
    if (textArea) {
      // ËÅöÁÑ¶Âà∞ÊñáÂ≠óÂçÄÂüü
      textArea.focus();
      
      // Ê†πÊìöÂÖÉÁ¥†È°ûÂûãË®≠ÁΩÆÊñáÂ≠ó
      if (textArea.tagName === 'TEXTAREA' || textArea.tagName === 'INPUT') {
        textArea.value = messages;
        textArea.dispatchEvent(new Event('input', { bubbles: true }));
      } else if (textArea.contentEditable === 'true') {
        textArea.textContent = messages;
        textArea.dispatchEvent(new Event('input', { bubbles: true }));
      }

      // Ê®°Êì¨Áî®Êà∂Êìç‰Ωú‰ª•Ëß∏ÁôºÁõ∏Èóú‰∫ã‰ª∂
      setTimeout(() => {
        textArea.dispatchEvent(new Event('change', { bubbles: true }));
        textArea.dispatchEvent(new KeyboardEvent('keydown', { key: 'Enter', bubbles: true }));
      }, 500);

      console.log('Messages pasted into Gemini successfully');
      return true;
    } else if (attempt < maxAttempts) {
      console.log(`Attempt ${attempt + 1}: Text area not found, retrying...`);
      setTimeout(() => waitForTextArea(maxAttempts, attempt + 1), 1000);
    } else {
      console.error('Could not find text input area in Gemini');
      // ‰ΩúÁÇ∫ÂÇôÈÅ∏ÊñπÊ°àÔºåË§áË£ΩÂà∞Ââ™Ë≤ºÊùø
      if (navigator.clipboard) {
        navigator.clipboard.writeText(messages).then(() => {
          alert('ÁÑ°Ê≥ïËá™ÂãïË≤º‰∏äË®äÊÅØÔºåÂ∑≤Ë§áË£ΩÂà∞Ââ™Ë≤ºÊùø„ÄÇË´ãÊâãÂãïË≤º‰∏ä (Ctrl+V)');
        });
      }
    }
  }

  // Á≠âÂæÖÈ†ÅÈù¢ÂÆåÂÖ®ËºâÂÖ•
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => waitForTextArea());
  } else {
    waitForTextArea();
  }
}

/**
 * Âú®GeminiÈ†ÅÈù¢‰∏≠Âü∑Ë°åÁöÑÊ®°ÂûãÊ™¢Ê∏¨ÂáΩÊï∏
 * Ê≥®ÊÑèÔºöÈÄôÂÄãÂáΩÊï∏ÊúÉÂú®È†ÅÈù¢‰∏≠Âü∑Ë°åÔºåÈúÄË¶ÅÂÖàÊ≥®ÂÖ• InjectedUtils
 */
export function extractAvailableModels() {
  console.log('ÈñãÂßãÊ™¢Ê∏¨ Gemini ÂèØÁî®Ê®°Âûã...');
  
  // Ê™¢Êü• InjectedUtils ÊòØÂê¶ÂèØÁî®
  if (typeof window.InjectedUtils === 'undefined') {
    console.error('InjectedUtils Êú™ÊâæÂà∞ÔºåÁÑ°Ê≥ïÂü∑Ë°åÊ®°ÂûãÊ™¢Ê∏¨');
    return Promise.resolve([]);
  }
  
  const { sleep } = window.InjectedUtils;
  
  // È¶ñÂÖàÂòóË©¶ÈªûÊìäÊ®°ÂûãÂàáÊèõÊåâÈàï‰æÜÊâìÈñãÈÅ∏ÂñÆ
  const modeSwitcherSelectors = [
    'bard-mode-switcher button',
    '[data-test-id="bard-mode-menu-button"]',
    '.logo-pill-btn',
    'button[class*="logo-pill"]',
    'button[class*="mode-switch"]'
  ];
  
  let modeSwitcherButton = null;
  for (const selector of modeSwitcherSelectors) {
    modeSwitcherButton = document.querySelector(selector);
    if (modeSwitcherButton) {
      console.log(`ÊâæÂà∞Ê®°ÂûãÂàáÊèõÊåâÈàï: ${selector}`);
      break;
    }
  }
  
  if (!modeSwitcherButton) {
    return Promise.resolve([]); // Return empty array if no models detected
  }
  
  // ÈªûÊìäÊåâÈàïÊâìÈñãÈÅ∏ÂñÆ
  modeSwitcherButton.click();
  
  // Á≠âÂæÖÈÅ∏ÂñÆÂá∫Áèæ‰∏¶Ê™¢Ê∏¨Ê®°Âûã
  return sleep(1500).then(() => {
    const menuSelectors = [
      'mat-menu',
      '[role="menu"]',
      '.mat-mdc-menu-panel',
      '.mdc-menu-surface'
    ];
    
    let menu = null;
    for (const selector of menuSelectors) {
      menu = document.querySelector(selector);
      if (menu && menu.offsetParent !== null) {
        console.log(`ÊâæÂà∞Ê®°ÂûãÈÅ∏ÂñÆ: ${selector}`);
        break;
      }
    }
    
    if (!menu) {
      return [];
    }
    
    // ÊèêÂèñÊâÄÊúâÊ®°ÂûãÈÅ∏È†Ö
    const menuItems = menu.querySelectorAll('button, [role="menuitem"], mat-option, .mat-mdc-menu-item');
    const models = [];
    
    menuItems.forEach((item, index) => {
      const itemText = item.textContent.trim();
      console.log(`Ê™¢Ê∏¨Âà∞Ê®°ÂûãÈÅ∏È†Ö ${index + 1}: ${itemText}`);
      
      if (itemText && itemText.length > 0) {
        // ÂòóË©¶Ëß£ÊûêÊ®°ÂûãÂêçÁ®±
        let value = '';
        let displayName = itemText;
        
        // Ê†πÊìöÊñáÂ≠óÂÖßÂÆπÊé®Êñ∑Ê®°ÂûãÈ°ûÂûã
        if (itemText.toLowerCase().includes('flash') || itemText.includes('2.5') && itemText.toLowerCase().includes('flash')) {
          value = 'gemini-2.5-flash';
          if (!displayName.includes('‚ö°')) {
            displayName = `‚ö° ${displayName}`;
          }
        } else if (itemText.toLowerCase().includes('pro') || itemText.includes('2.5') && itemText.toLowerCase().includes('pro')) {
          value = 'gemini-2.5-pro';
          if (!displayName.includes('üß†')) {
            displayName = `üß† ${displayName}`;
          }
        } else {
          // Â∞çÊñºÊú™Áü•Ê®°ÂûãÔºå‰ΩøÁî®ÊñáÂ≠óÂÖßÂÆπ‰ΩúÁÇ∫ value
          value = itemText.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '');
          displayName = itemText;
        }
        
        models.push({
          value: value,
          displayName: displayName,
          originalText: itemText
        });
      }
    });
    
    console.log(`Ê™¢Ê∏¨Âà∞ ${models.length} ÂÄãÊ®°Âûã:`, models);
    
    // Âª∂ÈÅ≤ÈóúÈñâÈÅ∏ÂñÆÔºåÁ¢∫‰øùÊúâË∂≥Â§†ÊôÇÈñìËÆìÂæåÁ∫åÊìç‰Ωú‰ΩøÁî®
    return sleep(500).then(() => {
      try {
        // ÈóúÈñâÈÅ∏ÂñÆÔºàÈªûÊìäÂÖ∂‰ªñÂú∞ÊñπÔºâ
        document.body.click();
        console.log('Ê®°ÂûãÈÅ∏ÂñÆÂ∑≤ÈóúÈñâ');
      } catch (error) {
        console.log('ÈóúÈñâÈÅ∏ÂñÆÊôÇÁôºÁîüÈåØË™§Ôºå‰ΩÜ‰∏çÂΩ±ÈüøÂäüËÉΩ:', error);
      }
      
      return models.length > 0 ? models : []; // Return empty array if no models detected
    });
  });
}

/**
 * Âú®GeminiÈ†ÅÈù¢‰∏≠Âü∑Ë°åÁöÑÊ®°ÂûãÂàáÊèõÂíåË®äÊÅØË≤º‰∏äÂáΩÊï∏
 * @param {string} targetModelDisplayName - ÁõÆÊ®ôÊ®°ÂûãÈ°ØÁ§∫ÂêçÁ®±
 * @param {string} messages - Ë¶ÅË≤º‰∏äÁöÑË®äÊÅØ
 */
export function switchModelAndPasteMessages(targetModelDisplayName, messages) {
  console.log(`Attempting to switch to model: ${targetModelDisplayName}`);
  
  /**
   * Local copy of pasteMessagesIntoGemini
   * ÈÄôÊÆµÁ®ãÂºèÁ¢ºÂøÖÈ†àËàá switchModelAndPasteMessages ‰∏ÄËµ∑Ë¢´Ê≥®ÂÖ•Âà∞ Gemini È†ÅÈù¢Ôºå
   * Âõ†Ê≠§ÊîæÂú®ÂáΩÂºèÂÖßÈÉ®‰ª•Á¢∫‰øù‰ΩúÁî®ÂüüÂÆåÊï¥ÔºåÈÅøÂÖç ReferenceError„ÄÇ
   * @param {string} msgs - Ë¶ÅË≤º‰∏äÁöÑË®äÊÅØ
   */
  function pasteMessagesIntoGemini(msgs) {
    function findTextArea() {
      const selectors = [
        'div[contenteditable="true"]',
        'textarea',
        '[data-testid="chat-input"]',
        '.ql-editor',
        '[role="textbox"]',
        '.chat-input',
        'input[type="text"]'
      ];

      for (const selector of selectors) {
        const element = document.querySelector(selector);
        if (element && element.offsetParent !== null) {
          return element;
        }
      }
      return null;
    }

    function waitForTextArea(maxAttempts = 10, attempt = 0) {
      const textArea = findTextArea();

      if (textArea) {
        textArea.focus();

        if (textArea.tagName === 'TEXTAREA' || textArea.tagName === 'INPUT') {
          textArea.value = msgs;
          textArea.dispatchEvent(new Event('input', { bubbles: true }));
        } else if (textArea.contentEditable === 'true') {
          textArea.textContent = msgs;
          textArea.dispatchEvent(new Event('input', { bubbles: true }));
        }

        setTimeout(() => {
          textArea.dispatchEvent(new Event('change', { bubbles: true }));
          textArea.dispatchEvent(new KeyboardEvent('keydown', { key: 'Enter', bubbles: true }));
        }, 500);

        console.log('Messages pasted into Gemini successfully (local)');
        return true;
      }

      if (attempt < maxAttempts) {
        console.log(`Attempt ${attempt + 1}: Text area not found, retrying...`);
        setTimeout(() => waitForTextArea(maxAttempts, attempt + 1), 1000);
      } else {
        console.error('Could not find text input area in Gemini');
        if (navigator.clipboard) {
          navigator.clipboard.writeText(msgs).then(() => {
            alert('ÁÑ°Ê≥ïËá™ÂãïË≤º‰∏äË®äÊÅØÔºåÂ∑≤Ë§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø„ÄÇË´ãÊâãÂãïË≤º‰∏ä (Ctrl+V)');
          });
        }
      }
    }

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => waitForTextArea());
    } else {
      waitForTextArea();
    }
  }

  function findAndClickModelSwitcher() {
    // Â∞ãÊâæÊ®°ÂûãÂàáÊèõÊåâÈàï
    const modeSwitcherSelectors = [
      'bard-mode-switcher button',
      '[data-test-id="bard-mode-menu-button"]',
      '.logo-pill-btn',
      'button[class*="logo-pill"]',
      'button[class*="mode-switch"]'
    ];
    
    let modeSwitcherButton = null;
    for (const selector of modeSwitcherSelectors) {
      modeSwitcherButton = document.querySelector(selector);
      if (modeSwitcherButton) {
        console.log(`Found mode switcher with selector: ${selector}`);
        break;
      }
    }
    
    if (modeSwitcherButton) {
      // ÈªûÊìäÊ®°ÂûãÂàáÊèõÊåâÈàï
      modeSwitcherButton.click();
      console.log('Clicked mode switcher button');
      
      // Á≠âÂæÖ‰∏ãÊãâÈÅ∏ÂñÆÂá∫Áèæ
      setTimeout(() => {
        findAndSelectModel(targetModelDisplayName);
      }, 1000);
      
      return true;
    } else {
      console.log('Mode switcher button not found');
      return false;
    }
  }
  
  function findAndSelectModel(modelDisplayName) {
    // Â∞ãÊâæÊ®°ÂûãÈÅ∏È†Ö
    const menuSelectors = [
      'mat-menu',
      '[role="menu"]',
      '.mat-mdc-menu-panel',
      '.mdc-menu-surface'
    ];
    
    let menu = null;
    for (const selector of menuSelectors) {
      menu = document.querySelector(selector);
      if (menu && menu.offsetParent !== null) { // Á¢∫‰øùÈÅ∏ÂñÆÂèØË¶ã
        console.log(`Found menu with selector: ${selector}`);
        break;
      }
    }
    
    if (menu) {
      // Âú®ÈÅ∏ÂñÆ‰∏≠Â∞ãÊâæÁõÆÊ®ôÊ®°Âûã
      const menuItems = menu.querySelectorAll('button, [role="menuitem"], mat-option, .mat-mdc-menu-item');
      
      for (const item of menuItems) {
        const itemText = item.textContent.trim();
        console.log(`Checking menu item: ${itemText}`);
        
        // Ê™¢Êü•ÊòØÂê¶ÂåÖÂê´ÁõÆÊ®ôÊ®°ÂûãÂêçÁ®±
        if (itemText.includes(modelDisplayName) || 
            itemText.includes(modelDisplayName.replace('.', '')) ||
            itemText.toLowerCase().includes(modelDisplayName.toLowerCase())) {
          
          console.log(`Found matching model option: ${itemText}`);
          item.click();
          
          // Á≠âÂæÖÊ®°ÂûãÂàáÊèõÂÆåÊàêÂæåÂÜçË≤º‰∏äË®äÊÅØ
          setTimeout(() => {
            pasteMessagesIntoGemini(messages);
          }, 2000);
          
          return true;
        }
      }
      
      console.log(`Model "${modelDisplayName}" not found in menu options`);
      // Â¶ÇÊûúÊâæ‰∏çÂà∞ÊåáÂÆöÊ®°ÂûãÔºåÁõ¥Êé•Ë≤º‰∏äË®äÊÅØ
      setTimeout(() => {
        pasteMessagesIntoGemini(messages);
      }, 1000);
      
    } else {
      console.log('Model selection menu not found');
      // Â¶ÇÊûúÊâæ‰∏çÂà∞ÈÅ∏ÂñÆÔºåÁõ¥Êé•Ë≤º‰∏äË®äÊÅØ
      setTimeout(() => {
        pasteMessagesIntoGemini(messages);
      }, 1000);
    }
  }
  
  // ÈñãÂßãÂü∑Ë°åÊ®°ÂûãÂàáÊèõ
  if (!findAndClickModelSwitcher()) {
    // Â¶ÇÊûúÊâæ‰∏çÂà∞Ê®°ÂûãÂàáÊèõÂô®ÔºåÁõ¥Êé•Ë≤º‰∏äË®äÊÅØ
    console.log('Falling back to direct message pasting');
    setTimeout(() => {
      pasteMessagesIntoGemini(messages);
    }, 1000);
  }
} 